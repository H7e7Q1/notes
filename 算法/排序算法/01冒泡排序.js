// JavaScript中实现冒泡排序的思路：
// 对相邻的元素进⾏两两⽐较，顺序相反则进⾏交换，这样，
// 每⼀趟会将最⼩或最⼤的元素“浮”到顶端， 最终达到完全有序。
// （始终移动最⼤或最⼩的⼀个）


// 1、比较相邻的两个元素，如果前一个比后一个大，则交换位置。
// 2、比较完第一轮的时候，最后一个元素是最大的元素。
// 3、这时候最后一个元素是最大的，所以最后一个元素就不需要参与比较大小。

// 数组中有 n 个数，比较每相邻两个数，如果前者大于后者，就把两个数交换位置；
// 这样一来，第一轮就可以选出一个最大的数放在最后面；那么经过 n-1（数组的 length - 1） 轮，就完成了所有数的排序。

var array=[2,15,68,10,48,98,65,41,20,9,8,79,65,100];
function bubbleSort(arr){
    for(var i=0;i<arr.length;i++){
        // 每当i指针向右移动就意味着有一个元素沉底了不不需要比较所以还要减去i
        for(var j=0;j<arr.length-1-i;j++){
            if(arr[j]>arr[j+1]){
               [arr[j],arr[j+1]]=[arr[j+1],arr[j]]
            }
        }
    }
    return arr
}
console.log(bubbleSort(array));